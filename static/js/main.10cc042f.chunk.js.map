{"version":3,"sources":["jsx/Header.jsx","jsx/About.jsx","jsx/Home.jsx","jsx/App.jsx","serviceWorker.js","index.js"],"names":["Header","href","className","About","Home","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"wQAKeA,EAEf,WACI,OACA,6BAEI,sCACI,4BACI,uBAAGC,KAAK,WAAWC,UAAU,SAA7B,sBAKR,qCACI,yDCXGC,MAEf,WACE,OACE,yBAAKD,UAAU,SACb,4BAAQA,UAAU,cAChB,kBAAC,EAAD,MAEA,sCACE,+BACE,0CACA,iCACA,6BADA,0BCZGE,MAEf,WACE,OACE,yBAAKF,UAAU,OAEX,4BAAQA,UAAU,cACd,kBAAC,EAAD,MACA,yBAAKA,UAAU,qBACX,sCACI,+BACI,wBAAIA,UAAU,SAAd,WACA,wBAAIA,UAAU,UAAd,oBACA,uBAAGA,UAAU,WAAb,kHAMR,kCACI,uBAAGA,UAAU,cAAcD,KAAK,iBAC5B,wBAAIC,UAAU,aAAd,eAEJ,uBAAGA,UAAU,cAAcD,KAAK,oBAC5B,wBAAIC,UAAU,aAAd,eAEJ,uBAAGA,UAAU,cAAcD,KAAK,iBAC5B,wBAAIC,UAAU,aAAd,mBCrBTG,MAEf,WACE,OACE,kBAAC,IAAD,KAEE,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAOC,KAAK,iBACV,kBAACH,EAAD,OAEF,kBAAC,IAAD,CAAOG,KAAK,YACV,kBAACF,EAAD,UCbUG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.10cc042f.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../css/App.css';\r\nimport '../css/Header.css';\r\nimport '../css/Font.css';\r\n\r\nexport default Header;\r\n\r\nfunction Header() {\r\n    return (\r\n    <div>\r\n        \r\n        <content-area>\r\n            <h1>\r\n                <a href=\"/my-web/\" className=\"title\" > PHAN_KIET_BLOG </a>\r\n            </h1>\r\n\r\n        </content-area>\r\n\r\n        <content-run>\r\n            <run-txt>\r\n                PhanKiet blog web\r\n            </run-txt>\r\n        </content-run>\r\n    </div>\r\n    );\r\n}","import React from 'react';\r\n\r\nimport '../css/App.css';\r\nimport '../css/Header.css';\r\nimport '../css/Font.css';\r\n\r\nimport Header from './Header';\r\n\r\nexport default About;\r\n\r\nfunction About() {\r\n  return (\r\n    <div className=\"About\">\r\n      <header className=\"App-header\">\r\n        <Header />\r\n        \r\n        <body-content>\r\n          <intro>\r\n            <h3> ABOUT ME </h3>\r\n            <p> HI\r\n            <br></br>\r\n            Okay, here we go.\r\n            </p>\r\n          </intro>\r\n        </body-content>\r\n      </header>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\n/*\r\n\r\ngit add .\r\ngit commit -m 'commit'\r\ngit push origin master\r\nnpm run deploy\r\n\r\n*/","import React from 'react';\r\nimport '../css/App.css';\r\nimport '../css/Header.css';\r\nimport '../css/Font.css';\r\n\r\nimport Header from './Header';\r\n\r\nexport default Home;\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"App\">\r\n        \r\n        <header className=\"App-header\">\r\n            <Header />\r\n            <div className=\"content-container\">\r\n                <body-content>\r\n                    <intro>\r\n                        <h3 className=\"sayhi\"> HELLO!</h3>\r\n                        <h4 className=\"sayhii\"> IT'S PHAN KIET </h4>\r\n                        <p className=\"sayhiii\">\r\n                            This is my website which allows me to post my projects, my experience about coding, ML, DL, gym, stuff, etc. \r\n                        </p>\r\n                    </intro>\r\n                </body-content>\r\n\r\n                <contents>\r\n                    <a className=\"content-box\" href=\"/my-web/about\">\r\n                        <h2 className=\"box-title\" > ABOUT ME </h2>\r\n                    </a>\r\n                    <a className=\"content-box\" href=\"/my-web/projects\">\r\n                        <h2 className=\"box-title\"> PROJECTS </h2>\r\n                    </a>\r\n                    <a className=\"content-box\" href=\"/my-web/blogs\">\r\n                        <h2 className=\"box-title\"> MY BLOG </h2>\r\n                    </a>\r\n                </contents>\r\n            </div>\r\n        </header>\r\n    </div>\r\n  );\r\n}\r\n\r\n/*\r\n\r\ngit add .\r\ngit commit -m 'commit'\r\ngit push origin master\r\nnpm run deploy\r\n\r\n*/","import React from 'react';\nimport '../css/App.css';\nimport '../css/Header.css';\nimport '../css/Font.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\nimport About from './About';\nimport Home from './Home';\n\n\nexport default App;\n\nfunction App() {\n  return (\n    <Router>\n\n      <Switch>\n        \n        <Route path=\"/my-web/about\">\n          <About />\n        </Route>\n        <Route path=\"/my-web/\">\n          <Home />\n        </Route>\n\n\n      </Switch>\n\n    </Router>\n  );\n}\n\n/*\n\ngit add .\ngit commit -m 'commit'\ngit push origin master\nnpm run deploy\n\n*/","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './jsx/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <About />\n//   </React.StrictMode>,\n//   document.getElementById('about')\n// );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}