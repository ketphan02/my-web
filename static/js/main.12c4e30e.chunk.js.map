{"version":3,"sources":["About.jsx","Home.jsx","App.jsx","serviceWorker.js","index.js"],"names":["About","className","href","Home","action","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"8RAKeA,EAEf,WACE,OACE,yBAAKC,UAAU,SACb,4BAAQA,UAAU,cACd,sCACE,4BACE,uBAAGC,KAAK,WAAWD,UAAU,SAA7B,sBAQJ,qCACI,uDAKR,sCACE,+BACE,0CACA,iCACA,6BADA,0BCzBKE,MAEf,WACE,OACE,yBAAKF,UAAU,OACX,4BAAQA,UAAU,cACd,sCACI,4BACI,uBAAGC,KAAK,WAAWD,UAAU,SAA7B,qBAEJ,0BAAMG,OAAO,sBACT,4BAAQH,UAAU,gBAAlB,oBAKR,qCACI,uDAKJ,sCACI,+BACI,uDACA,kMAAuK,uBAAGC,KAAK,iBAAR,SAAvK,IACA,6BADA,0BChBLG,MAEf,WACE,OACE,kBAAC,IAAD,KAgCE,kBAAC,IAAD,KAEE,kBAAC,IAAD,CAAOC,KAAK,UACV,kBAACN,EAAD,OAEF,kBAAC,IAAD,CAAOM,KAAK,KACV,kBAACH,EAAD,UC5CUI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.12c4e30e.chunk.js","sourcesContent":["import React from 'react';\r\nimport './App.css';\r\nimport './Header.css';\r\nimport './Font.css';\r\n\r\nexport default About;\r\n\r\nfunction About() {\r\n  return (\r\n    <div className=\"About\">\r\n      <header className=\"App-header\">\r\n          <content-area>\r\n            <h2>\r\n              <a href=\"/my-web/\" className=\"title\" > PHAN_KIET_BLOG </a>\r\n            </h2>\r\n            {/* <form action=\"https://google.com\">\r\n              <button className=\"title-button\"> MAGIC BUTTON </button>\r\n            </form> */}\r\n\r\n          </content-area>\r\n\r\n          <content-run>\r\n              <run-txt>\r\n                PhanKiet blog web\r\n              </run-txt>\r\n          </content-run>\r\n      \r\n      <body-content>\r\n        <intro>\r\n          <h3> ABOUT ME </h3>\r\n          <p> HI\r\n          <br></br>\r\n          Okay, here we go.\r\n          </p>\r\n        </intro>\r\n      </body-content>\r\n      \r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\n/*\r\n\r\ngit add .\r\ngit commit -m 'commit'\r\ngit push origin master\r\nnpm run deploy\r\n\r\n*/","import React from 'react';\r\nimport './App.css';\r\nimport './Header.css';\r\nimport './Font.css';\r\n\r\nexport default Home;\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"App\">\r\n        <header className=\"App-header\">\r\n            <content-area>\r\n                <h2>\r\n                    <a href=\"/my-web/\" className=\"title\" > PHAN_KIET_BLOG </a>\r\n                </h2>\r\n                <form action=\"https://google.com\">\r\n                    <button className=\"title-button\"> MAGIC BUTTON </button>\r\n                </form>\r\n\r\n            </content-area>\r\n\r\n            <content-run>\r\n                <run-txt>\r\n                    PhanKiet blog web\r\n                </run-txt>\r\n            </content-run>\r\n        \r\n            <body-content>\r\n                <intro>\r\n                    <h3> HELLO, IT'S PHAN KIET </h3>\r\n                    <p>This is my website which allows me to post my projects, my experience about coding, ML, DL, gym, stuff, etc. Want to know more ? \"Almost everything\" about me is in <a href=\"/my-web/about\"> HERE</a>.\r\n                    <br></br>\r\n                    Okay, here we go.\r\n                    </p>\r\n                </intro>\r\n            </body-content>\r\n        \r\n        </header>\r\n    </div>\r\n  );\r\n}\r\n\r\n/*\r\n\r\ngit add .\r\ngit commit -m 'commit'\r\ngit push origin master\r\nnpm run deploy\r\n\r\n*/","import React from 'react';\nimport './App.css';\nimport './Header.css';\nimport './Font.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport About from './About';\nimport Home from './Home';\n\n\nexport default App;\n\nfunction App() {\n  return (\n    <Router>\n      {/* <div className=\"App\">\n        <header className=\"App-header\">\n            <content-area>\n              <h2>\n                <a href=\"/my-web/\" className=\"title\" > PHAN_KIET_BLOG </a>\n              </h2>\n              <form action=\"https://google.com\">\n                <button className=\"title-button\"> MAGIC BUTTON </button>\n              </form>\n\n            </content-area>\n\n            <content-run>\n                <run-txt>\n                  PhanKiet blog web\n                </run-txt>\n            </content-run>\n        \n        <body-content>\n          <intro>\n            <h3> HELLO, IT'S PHAN KIET </h3>\n            <p>This is my website which allows me to post my projects, my experience about coding, ML, DL, gym, stuff, etc. Want to know more ? \"Almost everything\" about me is in <a href=\"/my-web/about\"> HERE</a>.\n            <br></br>\n            Okay, here we go.\n            </p>\n          </intro>\n        </body-content>\n        \n        </header>\n      </div> */}\n\n      <Switch>\n        \n        <Route path=\"/about\">\n          <About />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n\n\n      </Switch>\n\n    </Router>\n  );\n}\n\n/*\n\ngit add .\ngit commit -m 'commit'\ngit push origin master\nnpm run deploy\n\n*/","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport About from './About';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <About />\n//   </React.StrictMode>,\n//   document.getElementById('about')\n// );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}